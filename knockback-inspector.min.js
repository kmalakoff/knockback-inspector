// Generated by CoffeeScript 1.3.3

/*
knockback-inspector.js 0.1.1
(c) 2012 Kevin Malakoff.
Knockback-Inspector.js is freely distributable under the MIT license.
See the following for full license details:
  https://github.com/kmalakoff/knockback-inspector/blob/master/LICENSE
Dependencies: Knockout.js, Underscore.js, Backbone.js, and Knockback.js.
*/(function(){var Backbone,kb,kbi,ko,_,_ref,__hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};_=!window._&&typeof require!="undefined"?(_ref=require("underscore"))!=null?_ref._:void 0:window._,Backbone=!window.Backbone&&typeof require!="undefined"?require("backbone"):window.Backbone,ko=!window.ko&&typeof require!="undefined"?require("knockout"):window.ko,kb=!window.kb&&typeof require!="undefined"?require("knockback"):window.kb,kbi=this.kbi=typeof exports!="undefined"?exports:{},this.kbi.VERSION="0.1.1",kbi.NodeViewModel=function(){function NodeViewModel(name,opened,node){var model;this.name=name,this.opened=ko.observable(opened),this.node=ko.utils.unwrapObservable(node),this.node instanceof kb.ViewModel&&(model=kb.utils.wrappedModel(this.node),this.attribute_names=ko.observableArray(model?_.keys(model.attributes):[])),this}return NodeViewModel.prototype.attributeType=function(key){var attribute_connector;return attribute_connector=this.node[key],ko.utils.unwrapObservable(attribute_connector)instanceof kb.ViewModel?"model":kb.utils.observableInstanceOf(attribute_connector,kb.CollectionAttributeConnector)?"collection":"simple"},NodeViewModel}(),kbi.nodeViewModel=kbi.nvm=function(name,opened,node){return new kbi.NodeViewModel(name,opened,node)},kbi.CollectionNodeView="<li class='kbi' data-bind=\"css: {opened: opened, closed: !opened()}\">\n  <div class='collection' data-bind=\"click: function(){ opened(!opened()) }\">\n    <span data-bind=\"text: (opened() ? '- ' : '+ ' )\"></span>\n    <span data-bind=\"text: name\"></span>\n  </div>\n\n  <!-- ko if: opened -->\n    <!-- ko foreach: node -->\n      <ul class='kbi' data-bind=\"template: {name: 'kbi_model_node', data: kbi.nvm('['+$index()+']', false, $data)}\"></ul>\n    <!-- /ko -->\n  <!-- /ko -->\n</li>",kbi.ModelNodeView="<li class='kbi' data-bind=\"css: {opened: opened, closed: !opened()}\">\n  <div class='kbi model' data-bind=\"click: function(){ opened(!opened()); }\">\n    <span data-bind=\"text: (opened() ? '- ' : '+ ' )\"></span>\n    <span data-bind=\"text: name\"></span>\n  </div>\n\n  <!-- ko if: opened -->\n    <!-- ko foreach: attribute_names -->\n\n      <!-- ko if: ($parent.attributeType($data) == 'simple') -->\n        <fieldset class='kbi'>\n          <label data-bind=\"text: $data\"> </label>\n          <input type='text' data-bind=\"value: $parent.node[$data]\">\n        </fieldset>\n      <!-- /ko -->\n\n      <!-- ko if: ($parent.attributeType($data) == 'model') -->\n        <ul class='kbi' data-bind=\"template: {name: 'kbi_model_node', data: kbi.nvm($data, false, $parent.node[$data])}\"></ul>\n      <!-- /ko -->\n\n      <!-- ko if: ($parent.attributeType($data) == 'collection') -->\n        <ul class='kbi' data-bind=\"template: {name: 'kbi_collection_node', data: kbi.nvm($data+'[]', true, $parent.node[$data])}\"></ul>\n      <!-- /ko -->\n\n    <!-- /ko -->\n  <!-- /ko -->\n</li>",kbi.StringTemplateSource=function(){function StringTemplateSource(template_string){this.template_string=template_string}return StringTemplateSource.prototype.text=function(value){return this.template_string},StringTemplateSource}(),kbi.StringTemplateEngine=function(_super){function StringTemplateEngine(){this.allowTemplateRewriting=!1}return __extends(StringTemplateEngine,_super),StringTemplateEngine.prototype.makeTemplateSource=function(template){switch(template){case"kbi_model_node":return new kbi.StringTemplateSource(kbi.ModelNodeView);case"kbi_collection_node":return new kbi.StringTemplateSource(kbi.CollectionNodeView);default:return ko.nativeTemplateEngine.prototype.makeTemplateSource.apply(this,arguments)}},StringTemplateEngine}(ko.nativeTemplateEngine),kbi.FetchedModel=function(_super){function FetchedModel(){return FetchedModel.__super__.constructor.apply(this,arguments)}return __extends(FetchedModel,_super),FetchedModel.prototype.parse=function(response){var attributes,collection,key,model,value;attributes={};for(key in response)value=response[key],_.isObject(value)?(model=new kbi.FetchedModel,attributes[key]=model.set(model.parse(value))):_.isArray(value)?(collection=new kbi.FetchedCollection,attributes[key]=collection.reset(collection.parse(value))):attributes[key]=value;return attributes},FetchedModel}(Backbone.Model),kbi.FetchedCollection=function(_super){function FetchedCollection(){return FetchedCollection.__super__.constructor.apply(this,arguments)}return __extends(FetchedCollection,_super),FetchedCollection.prototype.model=kbi.FetchedModel,FetchedCollection.prototype.parse=function(response){return _.map(response.results,function(result){var model;return model=new kbi.FetchedModel,model.set(model.parse(result))})},FetchedCollection}(Backbone.Collection)}).call(this);